{
  "{\"sourceRoot\":\"C:\\\\xampp\\\\htdocs\\\\chateaubrooklyn\\\\wp-content\\\\themes\\\\jupiter-child\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\xampp\\\\htdocs\\\\chateaubrooklyn\\\\wp-content\\\\themes\\\\jupiter-child\",\"filename\":\"C:\\\\xampp\\\\htdocs\\\\chateaubrooklyn\\\\wp-content\\\\themes\\\\jupiter-child\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\xampp\\\\htdocs\\\\chateaubrooklyn\\\\wp-content\\\\themes\\\\jupiter-child\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\xampp\\htdocs\\chateaubrooklyn\\wp-content\\themes\\jupiter-child",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\xampp\\htdocs\\chateaubrooklyn\\wp-content\\themes\\jupiter-child",
      "filename": "C:\\xampp\\htdocs\\chateaubrooklyn\\wp-content\\themes\\jupiter-child\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\xampp\\htdocs\\chateaubrooklyn\\wp-content\\themes\\jupiter-child",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\xampp\\htdocs\\chateaubrooklyn\\wp-content\\themes\\jupiter-child\\gulpfile.babel.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\xampp\\htdocs\\chateaubrooklyn\\wp-content\\themes\\jupiter-child\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\xampp\\htdocs\\chateaubrooklyn\\wp-content\\themes\\jupiter-child",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.build = exports.dev = exports.reload = exports.serve = exports.scripts = exports.clean = exports.watchForChanges = exports.copy = exports.styles = void 0;\n\nvar _gulp = require(\"gulp\");\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpCleanCss = _interopRequireDefault(require(\"gulp-clean-css\"));\n\nvar _gulpIf = _interopRequireDefault(require(\"gulp-if\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _autoprefixer = _interopRequireDefault(require(\"autoprefixer\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _webpackStream = _interopRequireDefault(require(\"webpack-stream\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//Retrieve these argument in the Gulpfile after adding argument to the command\nvar PRODUCTION = _yargs[\"default\"].argv.prod; //import browserSync that will allow us to refresh the browser each time tasks finish running.\n\n//Creating the style task\nvar styles = function styles() {\n  return (0, _gulp.src)('src/scss/bundle.scss').pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].init())).pipe((0, _gulpSass[\"default\"])().on('error', _gulpSass[\"default\"].logError)).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpPostcss[\"default\"])([(0, _autoprefixer[\"default\"])()]))).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpCleanCss[\"default\"])({\n    compatibility: 'ie8'\n  }))).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].write())).pipe((0, _gulp.dest)('dist/css'));\n}; //Creating the copy task\n\n\nexports.styles = styles;\n\nvar copy = function copy() {\n  return (0, _gulp.src)(['src/**/*', '!src/{images,js,scss}', '!src/{images,js,scss}/**/*']).pipe((0, _gulp.dest)('dist'));\n}; //Creating the watch task\n\n\nexports.copy = copy;\n\nvar watchForChanges = function watchForChanges() {\n  (0, _gulp.watch)('src/scss/**/*.scss', (0, _gulp.series)(styles, reload));\n  (0, _gulp.watch)(['src/**/*', '!src/{images,js,scss}', '!src/{images,js,scss}/**/*'], (0, _gulp.series)(copy, reload));\n  (0, _gulp.watch)('src/js/**/*.js', (0, _gulp.series)(scripts, reload));\n}; //Creating clean task\n\n\nexports.watchForChanges = watchForChanges;\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])(['dist']);\n}; //Creating the script task\n\n\nexports.clean = clean;\n\nvar scripts = function scripts() {\n  return (0, _gulp.src)('src/js/bundle.js').pipe((0, _webpackStream[\"default\"])({\n    module: {\n      rules: [{\n        test: /\\.js$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: []\n          }\n        }\n      }]\n    },\n    mode: PRODUCTION ? 'production' : 'development',\n    devtool: !PRODUCTION ? 'inline-source-map' : false,\n    output: {\n      filename: 'bundle.js'\n    }\n  })).pipe((0, _gulp.dest)('dist/js'));\n}; //Initialize a Browsersync server and write two new tasks\n\n\nexports.scripts = scripts;\n\nvar server = _browserSync[\"default\"].create();\n\nvar serve = function serve(done) {\n  server.init(_defineProperty({\n    browser: \"google chrome\",\n    proxy: \"localhost:3000\",\n    notify: false\n  }, \"proxy\", \"http://chateaubrooklyn.com/work-clients/\"));\n  done();\n};\n\nexports.serve = serve;\n\nvar reload = function reload(done) {\n  server.reload();\n  done();\n}; //Create two new tasks by composing the tasks that we already created\n\n\nexports.reload = reload;\nvar dev = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, copy, scripts), serve, watchForChanges);\nexports.dev = dev;\nvar build = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, copy, scripts));\nexports.build = build;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "PRODUCTION",
        "yargs",
        "argv",
        "prod",
        "styles",
        "pipe",
        "sourcemaps",
        "init",
        "on",
        "sass",
        "logError",
        "compatibility",
        "write",
        "copy",
        "watchForChanges",
        "reload",
        "scripts",
        "clean",
        "module",
        "rules",
        "test",
        "use",
        "loader",
        "options",
        "presets",
        "mode",
        "devtool",
        "output",
        "filename",
        "server",
        "browserSync",
        "create",
        "serve",
        "done",
        "browser",
        "proxy",
        "notify",
        "dev",
        "build"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\xampp\\htdocs\\chateaubrooklyn\\wp-content\\themes\\jupiter-child",
      "sourcesContent": [
        "import { src, dest, watch, series, parallel } from 'gulp';\r\n\r\n//import a package that will allow us to define these types of arguments while running a command.\r\nimport yargs from 'yargs';\r\n\r\n//import packages that will be responsible for compiling, minifying, conditionally running tasks\r\nimport sass from 'gulp-sass';\r\nimport cleanCss from 'gulp-clean-css';\r\nimport gulpif from 'gulp-if';\r\n\r\n//import packages that will be responsible for mapping, adding prefixes - (not work)\r\nimport postcss from 'gulp-postcss';\r\nimport sourcemaps from 'gulp-sourcemaps';\r\nimport autoprefixer from 'autoprefixer';\r\n\r\n//import a package that will be responsible for deleting the dist folder\r\nimport del from 'del';\r\n\r\n//import webpack-stream that will allow us to use webpack within a Gulp task\r\nimport webpack from 'webpack-stream';\r\n\r\n//Retrieve these argument in the Gulpfile after adding argument to the command\r\nconst PRODUCTION = yargs.argv.prod;\r\n\r\n//import browserSync that will allow us to refresh the browser each time tasks finish running.\r\nimport browserSync from \"browser-sync\";\r\n\r\n//Creating the style task\r\nexport const styles = () => {\r\n  return src('src/scss/bundle.scss')\r\n    .pipe(gulpif(!PRODUCTION, sourcemaps.init()))\r\n    .pipe(sass().on('error', sass.logError))\r\n    .pipe(gulpif(PRODUCTION, postcss([ autoprefixer() ])))\r\n    .pipe(gulpif(PRODUCTION, cleanCss({compatibility:'ie8'})))\r\n    .pipe(gulpif(!PRODUCTION, sourcemaps.write()))\r\n    .pipe(dest('dist/css'));\r\n}\r\n\r\n//Creating the copy task\r\nexport const copy = () => {\r\n  return src(['src/**/*','!src/{images,js,scss}','!src/{images,js,scss}/**/*'])\r\n    .pipe(dest('dist'));\r\n}\r\n\r\n//Creating the watch task\r\nexport const watchForChanges = () => {\r\n  watch('src/scss/**/*.scss', series(styles, reload));\r\n  watch(['src/**/*','!src/{images,js,scss}','!src/{images,js,scss}/**/*'], series(copy, reload));\r\n  watch('src/js/**/*.js', series(scripts, reload));\r\n}\r\n\r\n//Creating clean task\r\nexport const clean = () => del(['dist']);\r\n\r\n\r\n\r\n//Creating the script task\r\nexport const scripts = () => {\r\n  return src('src/js/bundle.js')\r\n  .pipe(webpack({\r\n    module: {\r\n      rules: [\r\n        {\r\n          test: /\\.js$/,\r\n          use: {\r\n            loader: 'babel-loader',\r\n            options: {\r\n              presets: []\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    mode: PRODUCTION ? 'production' : 'development',\r\n    devtool: !PRODUCTION ? 'inline-source-map' : false,\r\n    output: {\r\n      filename: 'bundle.js'\r\n    },\r\n  }))\r\n  .pipe(dest('dist/js'));\r\n}\r\n\r\n//Initialize a Browsersync server and write two new tasks\r\nconst server = browserSync.create();\r\nexport const serve = done => {\r\n  server.init({\r\n    browser: \"google chrome\",\r\n    proxy: \"localhost:3000\",\r\n    notify: false,\r\n    proxy: \"http://chateaubrooklyn.com/work-clients/\" // put your local website link here\r\n  });\r\n  done();\r\n};\r\nexport const reload = done => {\r\n  server.reload();\r\n  done();\r\n};\r\n\r\n//Create two new tasks by composing the tasks that we already created\r\nexport const dev = series(clean, parallel(styles, copy, scripts), serve, watchForChanges)\r\nexport const build = series(clean, parallel(styles, copy, scripts))\r\nexport default dev;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1556100601263
  },
  "{\"sourceRoot\":\"C:\\\\xampp\\\\htdocs\\\\dealexporttrading\\\\wp-content\\\\themes\\\\dealexport-child\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\xampp\\\\htdocs\\\\dealexporttrading\\\\wp-content\\\\themes\\\\dealexport-child\",\"filename\":\"C:\\\\xampp\\\\htdocs\\\\dealexporttrading\\\\wp-content\\\\themes\\\\dealexport-child\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\xampp\\\\htdocs\\\\dealexporttrading\\\\wp-content\\\\themes\\\\dealexport-child\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport-child",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport-child",
      "filename": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport-child\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport-child",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport-child\\gulpfile.babel.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport-child\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport-child",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.build = exports.dev = exports.reload = exports.serve = exports.scripts = exports.clean = exports.watchForChanges = exports.copy = exports.styles = void 0;\n\nvar _gulp = require(\"gulp\");\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpCleanCss = _interopRequireDefault(require(\"gulp-clean-css\"));\n\nvar _gulpIf = _interopRequireDefault(require(\"gulp-if\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _autoprefixer = _interopRequireDefault(require(\"autoprefixer\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _webpackStream = _interopRequireDefault(require(\"webpack-stream\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//Retrieve these argument in the Gulpfile after adding argument to the command\nvar PRODUCTION = _yargs[\"default\"].argv.prod; //import browserSync that will allow us to refresh the browser each time tasks finish running.\n\n//Creating the style task\nvar styles = function styles() {\n  return (0, _gulp.src)('src/scss/bundle.scss').pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].init())).pipe((0, _gulpSass[\"default\"])().on('error', _gulpSass[\"default\"].logError)).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpPostcss[\"default\"])([(0, _autoprefixer[\"default\"])()]))).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpCleanCss[\"default\"])({\n    compatibility: 'ie8'\n  }))).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].write())).pipe((0, _gulp.dest)('dist/css'));\n}; //Creating the copy task\n\n\nexports.styles = styles;\n\nvar copy = function copy() {\n  return (0, _gulp.src)(['src/**/*', '!src/{images,js,scss}', '!src/{images,js,scss}/**/*']).pipe((0, _gulp.dest)('dist'));\n}; //Creating the watch task\n\n\nexports.copy = copy;\n\nvar watchForChanges = function watchForChanges() {\n  (0, _gulp.watch)('src/scss/**/*.scss', (0, _gulp.series)(styles, reload));\n  (0, _gulp.watch)(['src/**/*', '!src/{images,js,scss}', '!src/{images,js,scss}/**/*'], (0, _gulp.series)(copy, reload));\n  (0, _gulp.watch)('src/js/**/*.js', (0, _gulp.series)(scripts, reload));\n}; //Creating clean task\n\n\nexports.watchForChanges = watchForChanges;\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])(['dist']);\n}; //Creating the script task\n\n\nexports.clean = clean;\n\nvar scripts = function scripts() {\n  return (0, _gulp.src)('src/js/bundle.js').pipe((0, _webpackStream[\"default\"])({\n    module: {\n      rules: [{\n        test: /\\.js$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: []\n          }\n        }\n      }]\n    },\n    mode: PRODUCTION ? 'production' : 'development',\n    devtool: !PRODUCTION ? 'inline-source-map' : false,\n    output: {\n      filename: 'bundle.js'\n    }\n  })).pipe((0, _gulp.dest)('dist/js'));\n}; //Initialize a Browsersync server and write two new tasks\n\n\nexports.scripts = scripts;\n\nvar server = _browserSync[\"default\"].create();\n\nvar serve = function serve(done) {\n  server.init(_defineProperty({\n    browser: \"google chrome\",\n    proxy: \"localhost:3000\",\n    notify: false\n  }, \"proxy\", \"http://chateaubrooklyn.com/work-clients/\"));\n  done();\n};\n\nexports.serve = serve;\n\nvar reload = function reload(done) {\n  server.reload();\n  done();\n}; //Create two new tasks by composing the tasks that we already created\n\n\nexports.reload = reload;\nvar dev = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, copy, scripts), serve, watchForChanges);\nexports.dev = dev;\nvar build = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, copy, scripts));\nexports.build = build;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "PRODUCTION",
        "yargs",
        "argv",
        "prod",
        "styles",
        "pipe",
        "sourcemaps",
        "init",
        "on",
        "sass",
        "logError",
        "compatibility",
        "write",
        "copy",
        "watchForChanges",
        "reload",
        "scripts",
        "clean",
        "module",
        "rules",
        "test",
        "use",
        "loader",
        "options",
        "presets",
        "mode",
        "devtool",
        "output",
        "filename",
        "server",
        "browserSync",
        "create",
        "serve",
        "done",
        "browser",
        "proxy",
        "notify",
        "dev",
        "build"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport-child",
      "sourcesContent": [
        "import { src, dest, watch, series, parallel } from 'gulp';\r\n\r\n//import a package that will allow us to define these types of arguments while running a command.\r\nimport yargs from 'yargs';\r\n\r\n//import packages that will be responsible for compiling, minifying, conditionally running tasks\r\nimport sass from 'gulp-sass';\r\nimport cleanCss from 'gulp-clean-css';\r\nimport gulpif from 'gulp-if';\r\n\r\n//import packages that will be responsible for mapping, adding prefixes - (not work)\r\nimport postcss from 'gulp-postcss';\r\nimport sourcemaps from 'gulp-sourcemaps';\r\nimport autoprefixer from 'autoprefixer';\r\n\r\n//import a package that will be responsible for deleting the dist folder\r\nimport del from 'del';\r\n\r\n//import webpack-stream that will allow us to use webpack within a Gulp task\r\nimport webpack from 'webpack-stream';\r\n\r\n//Retrieve these argument in the Gulpfile after adding argument to the command\r\nconst PRODUCTION = yargs.argv.prod;\r\n\r\n//import browserSync that will allow us to refresh the browser each time tasks finish running.\r\nimport browserSync from \"browser-sync\";\r\n\r\n//Creating the style task\r\nexport const styles = () => {\r\n  return src('src/scss/bundle.scss')\r\n    .pipe(gulpif(!PRODUCTION, sourcemaps.init()))\r\n    .pipe(sass().on('error', sass.logError))\r\n    .pipe(gulpif(PRODUCTION, postcss([ autoprefixer() ])))\r\n    .pipe(gulpif(PRODUCTION, cleanCss({compatibility:'ie8'})))\r\n    .pipe(gulpif(!PRODUCTION, sourcemaps.write()))\r\n    .pipe(dest('dist/css'));\r\n}\r\n\r\n//Creating the copy task\r\nexport const copy = () => {\r\n  return src(['src/**/*','!src/{images,js,scss}','!src/{images,js,scss}/**/*'])\r\n    .pipe(dest('dist'));\r\n}\r\n\r\n//Creating the watch task\r\nexport const watchForChanges = () => {\r\n  watch('src/scss/**/*.scss', series(styles, reload));\r\n  watch(['src/**/*','!src/{images,js,scss}','!src/{images,js,scss}/**/*'], series(copy, reload));\r\n  watch('src/js/**/*.js', series(scripts, reload));\r\n}\r\n\r\n//Creating clean task\r\nexport const clean = () => del(['dist']);\r\n\r\n\r\n\r\n//Creating the script task\r\nexport const scripts = () => {\r\n  return src('src/js/bundle.js')\r\n  .pipe(webpack({\r\n    module: {\r\n      rules: [\r\n        {\r\n          test: /\\.js$/,\r\n          use: {\r\n            loader: 'babel-loader',\r\n            options: {\r\n              presets: []\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    mode: PRODUCTION ? 'production' : 'development',\r\n    devtool: !PRODUCTION ? 'inline-source-map' : false,\r\n    output: {\r\n      filename: 'bundle.js'\r\n    },\r\n  }))\r\n  .pipe(dest('dist/js'));\r\n}\r\n\r\n//Initialize a Browsersync server and write two new tasks\r\nconst server = browserSync.create();\r\nexport const serve = done => {\r\n  server.init({\r\n    browser: \"google chrome\",\r\n    proxy: \"localhost:3000\",\r\n    notify: false,\r\n    proxy: \"http://chateaubrooklyn.com/work-clients/\" // put your local website link here\r\n  });\r\n  done();\r\n};\r\nexport const reload = done => {\r\n  server.reload();\r\n  done();\r\n};\r\n\r\n//Create two new tasks by composing the tasks that we already created\r\nexport const dev = series(clean, parallel(styles, copy, scripts), serve, watchForChanges)\r\nexport const build = series(clean, parallel(styles, copy, scripts))\r\nexport default dev;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1556100601263
  },
  "{\"sourceRoot\":\"C:\\\\xampp\\\\htdocs\\\\dealexporttrading\\\\wp-content\\\\themes\\\\dealexport\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\xampp\\\\htdocs\\\\dealexporttrading\\\\wp-content\\\\themes\\\\dealexport\",\"filename\":\"C:\\\\xampp\\\\htdocs\\\\dealexporttrading\\\\wp-content\\\\themes\\\\dealexport\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\xampp\\\\htdocs\\\\dealexporttrading\\\\wp-content\\\\themes\\\\dealexport\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport",
      "filename": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport\\gulpfile.babel.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.build = exports.dev = exports.reload = exports.serve = exports.scripts = exports.clean = exports.watchForChanges = exports.copy = exports.styles = void 0;\n\nvar _gulp = require(\"gulp\");\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpCleanCss = _interopRequireDefault(require(\"gulp-clean-css\"));\n\nvar _gulpIf = _interopRequireDefault(require(\"gulp-if\"));\n\nvar _gulpPostcss = _interopRequireDefault(require(\"gulp-postcss\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _autoprefixer = _interopRequireDefault(require(\"autoprefixer\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _webpackStream = _interopRequireDefault(require(\"webpack-stream\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//Retrieve these argument in the Gulpfile after adding argument to the command\nvar PRODUCTION = _yargs[\"default\"].argv.prod; //import browserSync that will allow us to refresh the browser each time tasks finish running.\n\n//Creating the style task\nvar styles = function styles() {\n  return (0, _gulp.src)('src/scss/bundle.scss').pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].init())).pipe((0, _gulpSass[\"default\"])().on('error', _gulpSass[\"default\"].logError)).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpPostcss[\"default\"])([(0, _autoprefixer[\"default\"])()]))).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpCleanCss[\"default\"])({\n    compatibility: 'ie8'\n  }))).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].write())).pipe((0, _gulp.dest)('dist/css'));\n}; //Creating the copy task\n\n\nexports.styles = styles;\n\nvar copy = function copy() {\n  return (0, _gulp.src)(['src/**/*', '!src/{images,js,scss}', '!src/{images,js,scss}/**/*']).pipe((0, _gulp.dest)('dist'));\n}; //Creating the watch task\n\n\nexports.copy = copy;\n\nvar watchForChanges = function watchForChanges() {\n  (0, _gulp.watch)('src/scss/**/*.scss', (0, _gulp.series)(styles, reload));\n  (0, _gulp.watch)(['src/**/*', '!src/{images,js,scss}', '!src/{images,js,scss}/**/*'], (0, _gulp.series)(copy, reload));\n  (0, _gulp.watch)('src/js/**/*.js', (0, _gulp.series)(scripts, reload));\n}; //Creating clean task\n\n\nexports.watchForChanges = watchForChanges;\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])(['dist']);\n}; //Creating the script task\n\n\nexports.clean = clean;\n\nvar scripts = function scripts() {\n  return (0, _gulp.src)('src/js/bundle.js').pipe((0, _webpackStream[\"default\"])({\n    module: {\n      rules: [{\n        test: /\\.js$/,\n        use: {\n          loader: 'babel-loader',\n          options: {\n            presets: []\n          }\n        }\n      }]\n    },\n    mode: PRODUCTION ? 'production' : 'development',\n    devtool: !PRODUCTION ? 'inline-source-map' : false,\n    output: {\n      filename: 'bundle.js'\n    }\n  })).pipe((0, _gulp.dest)('dist/js'));\n}; //Initialize a Browsersync server and write two new tasks\n\n\nexports.scripts = scripts;\n\nvar server = _browserSync[\"default\"].create();\n\nvar serve = function serve(done) {\n  server.init(_defineProperty({\n    browser: \"google chrome\",\n    proxy: \"localhost:3000\",\n    notify: false\n  }, \"proxy\", \"http://chateaubrooklyn.com/work-clients/\"));\n  done();\n};\n\nexports.serve = serve;\n\nvar reload = function reload(done) {\n  server.reload();\n  done();\n}; //Create two new tasks by composing the tasks that we already created\n\n\nexports.reload = reload;\nvar dev = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, copy, scripts), serve, watchForChanges);\nexports.dev = dev;\nvar build = (0, _gulp.series)(clean, (0, _gulp.parallel)(styles, copy, scripts));\nexports.build = build;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "PRODUCTION",
        "yargs",
        "argv",
        "prod",
        "styles",
        "pipe",
        "sourcemaps",
        "init",
        "on",
        "sass",
        "logError",
        "compatibility",
        "write",
        "copy",
        "watchForChanges",
        "reload",
        "scripts",
        "clean",
        "module",
        "rules",
        "test",
        "use",
        "loader",
        "options",
        "presets",
        "mode",
        "devtool",
        "output",
        "filename",
        "server",
        "browserSync",
        "create",
        "serve",
        "done",
        "browser",
        "proxy",
        "notify",
        "dev",
        "build"
      ],
      "mappings": ";;;;;;;AAAA;;AAGA;;AAGA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AAGA;;AAGA;;AAMA;;;;;;AAJA;AACA,IAAMA,UAAU,GAAGC,kBAAMC,IAAN,CAAWC,IAA9B,C,CAEA;;AAGA;AACO,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B,SAAO,eAAI,sBAAJ,EACJC,IADI,CACC,wBAAO,CAACL,UAAR,EAAoBM,2BAAWC,IAAX,EAApB,CADD,EAEJF,IAFI,CAEC,4BAAOG,EAAP,CAAU,OAAV,EAAmBC,qBAAKC,QAAxB,CAFD,EAGJL,IAHI,CAGC,wBAAOL,UAAP,EAAmB,6BAAQ,CAAE,+BAAF,CAAR,CAAnB,CAHD,EAIJK,IAJI,CAIC,wBAAOL,UAAP,EAAmB,8BAAS;AAACW,IAAAA,aAAa,EAAC;AAAf,GAAT,CAAnB,CAJD,EAKJN,IALI,CAKC,wBAAO,CAACL,UAAR,EAAoBM,2BAAWM,KAAX,EAApB,CALD,EAMJP,IANI,CAMC,gBAAK,UAAL,CAND,CAAP;AAOD,CARM,C,CAUP;;;;;AACO,IAAMQ,IAAI,GAAG,SAAPA,IAAO,GAAM;AACxB,SAAO,eAAI,CAAC,UAAD,EAAY,uBAAZ,EAAoC,4BAApC,CAAJ,EACJR,IADI,CACC,gBAAK,MAAL,CADD,CAAP;AAED,CAHM,C,CAKP;;;;;AACO,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnC,mBAAM,oBAAN,EAA4B,kBAAOV,MAAP,EAAeW,MAAf,CAA5B;AACA,mBAAM,CAAC,UAAD,EAAY,uBAAZ,EAAoC,4BAApC,CAAN,EAAyE,kBAAOF,IAAP,EAAaE,MAAb,CAAzE;AACA,mBAAM,gBAAN,EAAwB,kBAAOC,OAAP,EAAgBD,MAAhB,CAAxB;AACD,CAJM,C,CAMP;;;;;AACO,IAAME,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,qBAAI,CAAC,MAAD,CAAJ,CAAN;AAAA,CAAd,C,CAIP;;;;;AACO,IAAMD,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO,eAAI,kBAAJ,EACNX,IADM,CACD,+BAAQ;AACZa,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,IAAI,EAAE,OADR;AAEEC,QAAAA,GAAG,EAAE;AACHC,UAAAA,MAAM,EAAE,cADL;AAEHC,UAAAA,OAAO,EAAE;AACPC,YAAAA,OAAO,EAAE;AADF;AAFN;AAFP,OADK;AADD,KADI;AAcZC,IAAAA,IAAI,EAAEzB,UAAU,GAAG,YAAH,GAAkB,aAdtB;AAeZ0B,IAAAA,OAAO,EAAE,CAAC1B,UAAD,GAAc,mBAAd,GAAoC,KAfjC;AAgBZ2B,IAAAA,MAAM,EAAE;AACNC,MAAAA,QAAQ,EAAE;AADJ;AAhBI,GAAR,CADC,EAqBNvB,IArBM,CAqBD,gBAAK,SAAL,CArBC,CAAP;AAsBD,CAvBM,C,CAyBP;;;;;AACA,IAAMwB,MAAM,GAAGC,wBAAYC,MAAZ,EAAf;;AACO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,IAAI,EAAI;AAC3BJ,EAAAA,MAAM,CAACtB,IAAP;AACE2B,IAAAA,OAAO,EAAE,eADX;AAEEC,IAAAA,KAAK,EAAE,gBAFT;AAGEC,IAAAA,MAAM,EAAE;AAHV,cAIS,0CAJT;AAMAH,EAAAA,IAAI;AACL,CARM;;;;AASA,IAAMlB,MAAM,GAAG,SAATA,MAAS,CAAAkB,IAAI,EAAI;AAC5BJ,EAAAA,MAAM,CAACd,MAAP;AACAkB,EAAAA,IAAI;AACL,CAHM,C,CAKP;;;;AACO,IAAMI,GAAG,GAAG,kBAAOpB,KAAP,EAAc,oBAASb,MAAT,EAAiBS,IAAjB,EAAuBG,OAAvB,CAAd,EAA+CgB,KAA/C,EAAsDlB,eAAtD,CAAZ;;AACA,IAAMwB,KAAK,GAAG,kBAAOrB,KAAP,EAAc,oBAASb,MAAT,EAAiBS,IAAjB,EAAuBG,OAAvB,CAAd,CAAd;;eACQqB,G",
      "sourceRoot": "C:\\xampp\\htdocs\\dealexporttrading\\wp-content\\themes\\dealexport",
      "sourcesContent": [
        "import { src, dest, watch, series, parallel } from 'gulp';\r\n\r\n//import a package that will allow us to define these types of arguments while running a command.\r\nimport yargs from 'yargs';\r\n\r\n//import packages that will be responsible for compiling, minifying, conditionally running tasks\r\nimport sass from 'gulp-sass';\r\nimport cleanCss from 'gulp-clean-css';\r\nimport gulpif from 'gulp-if';\r\n\r\n//import packages that will be responsible for mapping, adding prefixes - (not work)\r\nimport postcss from 'gulp-postcss';\r\nimport sourcemaps from 'gulp-sourcemaps';\r\nimport autoprefixer from 'autoprefixer';\r\n\r\n//import a package that will be responsible for deleting the dist folder\r\nimport del from 'del';\r\n\r\n//import webpack-stream that will allow us to use webpack within a Gulp task\r\nimport webpack from 'webpack-stream';\r\n\r\n//Retrieve these argument in the Gulpfile after adding argument to the command\r\nconst PRODUCTION = yargs.argv.prod;\r\n\r\n//import browserSync that will allow us to refresh the browser each time tasks finish running.\r\nimport browserSync from \"browser-sync\";\r\n\r\n//Creating the style task\r\nexport const styles = () => {\r\n  return src('src/scss/bundle.scss')\r\n    .pipe(gulpif(!PRODUCTION, sourcemaps.init()))\r\n    .pipe(sass().on('error', sass.logError))\r\n    .pipe(gulpif(PRODUCTION, postcss([ autoprefixer() ])))\r\n    .pipe(gulpif(PRODUCTION, cleanCss({compatibility:'ie8'})))\r\n    .pipe(gulpif(!PRODUCTION, sourcemaps.write()))\r\n    .pipe(dest('dist/css'));\r\n}\r\n\r\n//Creating the copy task\r\nexport const copy = () => {\r\n  return src(['src/**/*','!src/{images,js,scss}','!src/{images,js,scss}/**/*'])\r\n    .pipe(dest('dist'));\r\n}\r\n\r\n//Creating the watch task\r\nexport const watchForChanges = () => {\r\n  watch('src/scss/**/*.scss', series(styles, reload));\r\n  watch(['src/**/*','!src/{images,js,scss}','!src/{images,js,scss}/**/*'], series(copy, reload));\r\n  watch('src/js/**/*.js', series(scripts, reload));\r\n}\r\n\r\n//Creating clean task\r\nexport const clean = () => del(['dist']);\r\n\r\n\r\n\r\n//Creating the script task\r\nexport const scripts = () => {\r\n  return src('src/js/bundle.js')\r\n  .pipe(webpack({\r\n    module: {\r\n      rules: [\r\n        {\r\n          test: /\\.js$/,\r\n          use: {\r\n            loader: 'babel-loader',\r\n            options: {\r\n              presets: []\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    mode: PRODUCTION ? 'production' : 'development',\r\n    devtool: !PRODUCTION ? 'inline-source-map' : false,\r\n    output: {\r\n      filename: 'bundle.js'\r\n    },\r\n  }))\r\n  .pipe(dest('dist/js'));\r\n}\r\n\r\n//Initialize a Browsersync server and write two new tasks\r\nconst server = browserSync.create();\r\nexport const serve = done => {\r\n  server.init({\r\n    browser: \"google chrome\",\r\n    proxy: \"localhost:3000\",\r\n    notify: false,\r\n    proxy: \"http://chateaubrooklyn.com/work-clients/\" // put your local website link here\r\n  });\r\n  done();\r\n};\r\nexport const reload = done => {\r\n  server.reload();\r\n  done();\r\n};\r\n\r\n//Create two new tasks by composing the tasks that we already created\r\nexport const dev = series(clean, parallel(styles, copy, scripts), serve, watchForChanges)\r\nexport const build = series(clean, parallel(styles, copy, scripts))\r\nexport default dev;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1556100601263
  }
}