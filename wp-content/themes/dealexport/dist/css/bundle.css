/**
  * Calculate the rem value based on the px value
  *
  * @param $fontsize
  * @return number in rem
  */
/**
 * Convert px to rem for font size with fallback
 */
/**
 * Convert px to rem for line-height with fallback
 */
/**
 * Media query
 */
/**
 * Jupiter - add color modifier for textblock
 */
/**
 * Typography - body text style
 */
/**
 * MEDIA QUERY MANAGER
 */
/*
  0 - 600px:      Phone
  600 - 900px:    Tablet portrait
  900 - 1200px:   Tablet landscape
  1200 - 1920px:  is where our normal style apply
  1920 + :        Big desktop
 
  $breakpoint arguement choices:
  - phone
  - tab-port
  - tab-land
  - big-desktop

  1em = 16px
 */
/**
 * Vendor-prefix keyframes
 */
/**
* Vendor-prefix animation
*/
/**
* Vendor-prefix transform
*/
/*****************************************
    font-family: 'Swiss721BT';
******************************************/
body .slide-inner-content-wrapper h2 {
  font-size: 60px;
  font-size: 3.75rem !important; }

body h1,
body h2 {
  font-size: 40px;
  font-size: 2.5rem !important;
  margin-bottom: 1rem !important; }

body h3 {
  font-size: 25px;
  font-size: 1.5625rem !important; }

body h4 {
  font-size: 25px;
  font-size: 1.5625rem !important; }

body .deals-inner-content-wrapper h2 {
  font-size: 14px;
  font-size: 0.875rem !important;
  margin-bottom: 0 !important; }

body div.wpb_text_column h4 {
  font-size: 30px;
  font-size: 1.875rem !important; }

@-webkit-keyframes floaty {
  0% {
    top: 0px; }
  50% {
    top: 15px; }
  100% {
    top: 0px; } }

@keyframes floaty {
  0% {
    top: 0px; }
  50% {
    top: 15px; }
  100% {
    top: 0px; } }

@-webkit-keyframes floatx {
  0% {
    left: 0px; }
  50% {
    left: 15px; }
  100% {
    left: 0px; } }

@keyframes floatx {
  0% {
    left: 0px; }
  50% {
    left: 15px; }
  100% {
    left: 0px; } }

@-webkit-keyframes tossing {
  0% {
    -ms-transform: rotate(-6deg);
    -webkit-transform: rotate(-6deg);
    transform: rotate(-6deg); }
  50% {
    -ms-transform: rotate(6deg);
    -webkit-transform: rotate(6deg);
    transform: rotate(6deg); }
  100% {
    -ms-transform: rotate(-6deg);
    -webkit-transform: rotate(-6deg);
    transform: rotate(-6deg); } }

@keyframes tossing {
  0% {
    -ms-transform: rotate(-6deg);
    -webkit-transform: rotate(-6deg);
    transform: rotate(-6deg); }
  50% {
    -ms-transform: rotate(6deg);
    -webkit-transform: rotate(6deg);
    transform: rotate(6deg); }
  100% {
    -ms-transform: rotate(-6deg);
    -webkit-transform: rotate(-6deg);
    transform: rotate(-6deg); } }

@-webkit-keyframes rotation {
  from {
    -ms-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  to {
    -ms-transform: rotate(359deg);
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg); } }

@keyframes rotation {
  from {
    -ms-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  to {
    -ms-transform: rotate(359deg);
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg); } }

.is-floating-vertical {
  -webkit-animation: floaty 2s infinite linear;
  -moz-animation: floaty 2s infinite linear;
  -o-animation: floaty 2s infinite linear;
  animation: floaty 2s infinite linear;
  position: relative; }

.is-floating-horizontal {
  -webkit-animation: floatx 2s infinite linear;
  -moz-animation: floatx 2s infinite linear;
  -o-animation: floatx 2s infinite linear;
  animation: floatx 2s infinite linear;
  position: relative; }

.is-rotation {
  -webkit-animation: rotation 6s infinite linear;
  -moz-animation: rotation 6s infinite linear;
  -o-animation: rotation 6s infinite linear;
  animation: rotation 6s infinite linear;
  position: relative; }

.is-tossing {
  -webkit-animation: tossing 6s infinite linear;
  -moz-animation: tossing 6s infinite linear;
  -o-animation: tossing 6s infinite linear;
  animation: tossing 6s infinite linear;
  position: relative; }

html {
  font-size: 62.5% !important; }
  @media (max-width: 240em) {
    html {
      font-size: 120% !important; } }
  @media (max-width: 120em) {
    html {
      font-size: 100% !important; } }
  @media (max-width: 75em) {
    html {
      font-size: 85% !important; } }
  @media (max-width: 56.25em) {
    html {
      font-size: 75% !important; } }
  @media (max-width: 37.5em) {
    html {
      font-size: 65% !important; } }

.wpb_raw_code {
  margin-bottom: 0px !important; }

.mk-page-section .mk-text-block.has-max-width {
  max-width: 430px; }

.wpb_column.has-padding-vertical > .vc_column-inner {
  padding-top: 6rem !important;
  padding-bottom: 6rem !important; }

.wpb_column.has-padding-horizontal > .vc_column-inner {
  padding-left: 5rem !important;
  padding-right: 5rem !important; }
  @media (max-width: 37.5em) {
    .wpb_column.has-padding-horizontal > .vc_column-inner {
      padding-left: 2rem !important;
      padding-right: 2rem !important; } }

.empty-space--medium {
  margin-bottom: 5.5rem; }
  @media (max-width: 56.25em) {
    .empty-space--medium {
      margin-bottom: 2rem; } }

.empty-space--small {
  margin-bottom: 3rem; }
  @media (max-width: 56.25em) {
    .empty-space--small {
      margin-bottom: 2rem; } }

.text-align--center {
  text-align: center; }

.white-space--pre {
  white-space: pre; }
  @media (max-width: 37.5em) {
    .white-space--pre {
      white-space: initial; } }

.empty-space {
  height: 1px !important; }

.display--flex.wpb_row {
  display: flex; }
  @media (max-width: 37.5em) {
    .display--flex.wpb_row {
      flex-wrap: wrap; } }
  .display--flex.wpb_row .wpb_column.has-align-items .vc_column-inner {
    height: 100%; }
    .display--flex.wpb_row .wpb_column.has-align-items .vc_column-inner .wpb_wrapper {
      height: 100%; }
  .display--flex.wpb_row .wpb_column.align-items--flex-end .vc_column-inner .wpb_wrapper {
    display: flex;
    align-items: flex-end; }
  .display--flex.wpb_row .wpb_column.align-items--flex-center .vc_column-inner .wpb_wrapper {
    display: flex;
    justify-content: center;
    flex-direction: column; }

.has-divider {
  border-bottom: 1px solid #dad0d0;
  padding-bottom: 2.5rem;
  margin-bottom: 2.5rem; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmNzcyIsInNvdXJjZXMiOlsiYnVuZGxlLnNjc3MiLCJhYnN0cmFjdHMvX2Z1bmN0aW9ucy5zY3NzIiwiYWJzdHJhY3RzL19taXhpbnMuc2NzcyIsImJhc2UvX3R5cG9ncmFwaHkuc2NzcyIsImJhc2UvX2ZvbnQuc2NzcyIsImJhc2UvX2FuaW1hdGlvbi5zY3NzIiwiY29tcG9uZW50cy9qdXBpdGVyLnNjc3MiXSwic291cmNlc0NvbnRlbnQiOlsiLy9EZWNsYXJlIGNvbG91cnNcclxuJHdoaXRlOiAjZmZmO1xyXG4kYmxhY2s6ICMwMDA7XHJcbiRtaWRuaWdodF9ibHVlOiAjMDAzMzY2O1xyXG5cclxuLy9HZW5lcmFsXHJcbiRhY2NlbnQ6ICRtaWRuaWdodF9ibHVlO1xyXG5cclxuLy9HdXR0ZXJcclxuJGd1dHRlci12ZXJ0aWNhbDogNnJlbTtcclxuJGd1dHRlci1ob3Jpem9udGFsOiA1cmVtO1xyXG5cclxuLy9EZWZpbmUgRm9udHNpemUgVmFyaWFibGVzXHJcbi8vRGVmaW5lIEZvbnRzaXplIFZhcmlhYmxlc1xyXG4kZjE6IDQwcHg7XHJcbiRmMjogNDBweDtcclxuJGYzOiAzMHB4O1xyXG4kZjQ6IDI1cHg7XHJcbiRmNTogMTZweDtcclxuJGY2OiAxNHB4O1xyXG4kZnA6IDE0cHg7XHJcblxyXG5AaW1wb3J0IFwiLi9hYnN0cmFjdHMvZnVuY3Rpb25zXCI7XHJcbkBpbXBvcnQgXCIuL2Fic3RyYWN0cy9taXhpbnNcIjtcclxuQGltcG9ydCBcIi4vYmFzZS90eXBvZ3JhcGh5XCI7XHJcbkBpbXBvcnQgXCIuL2Jhc2UvYW5pbWF0aW9uXCI7XHJcbkBpbXBvcnQgXCIuL2NvbXBvbmVudHMvanVwaXRlci5zY3NzXCI7XHJcbkBpbXBvcnQgXCIuL2Jhc2UvZm9udC5zY3NzXCI7XHJcbi8vQGltcG9ydCAnLi92ZW5kb3JzL2J1bG1hL2J1bG1hLnNjc3MnO1xyXG5cclxuLy9QYWdlc1xyXG5odG1sIHtcclxuICAvLyBUaGlzIGRlZmluZXMgd2hhdCAxcmVtIGlzXHJcbiAgZm9udC1zaXplOiA2Mi41JSAhaW1wb3J0YW50OyAvLzFyZW0gPSAxMHB4LCAxMHB4LzE2ID0gNjIuNSVcclxuICBAaW5jbHVkZSByZXNwb25kKDRrLWRlc2t0b3ApIHtcclxuICAgIGZvbnQtc2l6ZTogMTIwJSAhaW1wb3J0YW50O1xyXG4gIH1cclxuICBAaW5jbHVkZSByZXNwb25kKGJpZy1kZXNrdG9wKSB7XHJcbiAgICBmb250LXNpemU6IDEwMCUgIWltcG9ydGFudDtcclxuICB9XHJcbiAgQGluY2x1ZGUgcmVzcG9uZCh0YWItbGFuZCkge1xyXG4gICAgZm9udC1zaXplOiA4NSUgIWltcG9ydGFudDtcclxuICB9XHJcbiAgQGluY2x1ZGUgcmVzcG9uZCh0YWItcG9ydCkge1xyXG4gICAgZm9udC1zaXplOiA3NSUgIWltcG9ydGFudDtcclxuICB9XHJcbiAgQGluY2x1ZGUgcmVzcG9uZChwaG9uZSkge1xyXG4gICAgZm9udC1zaXplOiA2NSUgIWltcG9ydGFudDtcclxuICB9XHJcblxyXG4gIGJvZHkge1xyXG4gIH1cclxufVxyXG5cclxuLy9KdXBpdGVyXHJcbi53cGJfcmF3X2NvZGUge1xyXG4gIG1hcmdpbi1ib3R0b206IDBweCAhaW1wb3J0YW50O1xyXG59XHJcbi5tay1wYWdlLXNlY3Rpb24ge1xyXG4gIC5tay10ZXh0LWJsb2NrIHtcclxuICAgICYuaGFzLW1heC13aWR0aCB7XHJcbiAgICAgIG1heC13aWR0aDogNDMwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ud3BiX2NvbHVtbiB7XHJcbiAgJi5oYXMtcGFkZGluZy12ZXJ0aWNhbCB7XHJcbiAgICA+IC52Y19jb2x1bW4taW5uZXIge1xyXG4gICAgICBwYWRkaW5nLXRvcDogJGd1dHRlci12ZXJ0aWNhbCAhaW1wb3J0YW50O1xyXG4gICAgICBwYWRkaW5nLWJvdHRvbTogJGd1dHRlci12ZXJ0aWNhbCAhaW1wb3J0YW50O1xyXG4gICAgfVxyXG4gIH1cclxuICAmLmhhcy1wYWRkaW5nLWhvcml6b250YWwge1xyXG4gICAgPiAudmNfY29sdW1uLWlubmVyIHtcclxuICAgICAgcGFkZGluZy1sZWZ0OiAkZ3V0dGVyLWhvcml6b250YWwgIWltcG9ydGFudDtcclxuICAgICAgcGFkZGluZy1yaWdodDogJGd1dHRlci1ob3Jpem9udGFsICFpbXBvcnRhbnQ7XHJcbiAgICAgIEBpbmNsdWRlIHJlc3BvbmQocGhvbmUpIHtcclxuICAgICAgICBwYWRkaW5nLWxlZnQ6IDJyZW0gIWltcG9ydGFudDtcclxuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAycmVtICFpbXBvcnRhbnQ7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5lbXB0eS1zcGFjZSB7XHJcbiAgJi0tbWVkaXVtIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDUuNXJlbTtcclxuICAgIEBpbmNsdWRlIHJlc3BvbmQodGFiLXBvcnQpIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcclxuICAgIH1cclxuICB9XHJcbiAgJi0tc21hbGwge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogM3JlbTtcclxuICAgIEBpbmNsdWRlIHJlc3BvbmQodGFiLXBvcnQpIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi50ZXh0LWFsaWduLS1jZW50ZXIge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLndoaXRlLXNwYWNlLS1wcmUge1xyXG4gIHdoaXRlLXNwYWNlOiBwcmU7XHJcbiAgQGluY2x1ZGUgcmVzcG9uZChwaG9uZSkge1xyXG4gICAgd2hpdGUtc3BhY2U6IGluaXRpYWw7XHJcbiAgfVxyXG59XHJcblxyXG4uZW1wdHktc3BhY2Uge1xyXG4gIGhlaWdodDogMXB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5kaXNwbGF5LS1mbGV4IHtcclxuICAmLndwYl9yb3cge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIEBpbmNsdWRlIHJlc3BvbmQocGhvbmUpIHtcclxuICAgICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgfVxyXG4gICAgLndwYl9jb2x1bW4ge1xyXG4gICAgICAmLmhhcy1hbGlnbi1pdGVtcyB7XHJcbiAgICAgICAgLnZjX2NvbHVtbi1pbm5lciB7XHJcbiAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAud3BiX3dyYXBwZXIge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICAgICYuYWxpZ24taXRlbXMtLWZsZXgtZW5kIHtcclxuICAgICAgICAudmNfY29sdW1uLWlubmVyIHtcclxuICAgICAgICAgIC53cGJfd3JhcHBlciB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgJi5hbGlnbi1pdGVtcy0tZmxleC1jZW50ZXIge1xyXG4gICAgICAgIC52Y19jb2x1bW4taW5uZXIge1xyXG4gICAgICAgICAgLndwYl93cmFwcGVyIHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uaGFzLWRpdmlkZXIge1xyXG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGFkMGQwO1xyXG4gIHBhZGRpbmctYm90dG9tOiAyLjVyZW07XHJcbiAgbWFyZ2luLWJvdHRvbTogMi41cmVtO1xyXG59XHJcbiIsIi8qKlxyXG4gICogQ2FsY3VsYXRlIHRoZSByZW0gdmFsdWUgYmFzZWQgb24gdGhlIHB4IHZhbHVlXHJcbiAgKlxyXG4gICogQHBhcmFtICRmb250c2l6ZVxyXG4gICogQHJldHVybiBudW1iZXIgaW4gcmVtXHJcbiAgKi9cclxuQGZ1bmN0aW9uIGNhbGN1bGF0ZVJlbSgkZm9udFNpemUpIHtcclxuICAkcmVtU2l6ZTogJGZvbnRTaXplIC8gMTZweDtcclxuICBAcmV0dXJuICN7JHJlbVNpemV9cmVtO1xyXG59XHJcbiIsIi8qKlxyXG4gKiBDb252ZXJ0IHB4IHRvIHJlbSBmb3IgZm9udCBzaXplIHdpdGggZmFsbGJhY2tcclxuICovXHJcbkBtaXhpbiBmb250U2l6ZSgkc2l6ZSkge1xyXG4gIGZvbnQtc2l6ZTogJHNpemU7IC8vRmFsbGJhY2sgaW4gcHhcclxuICBmb250LXNpemU6IGNhbGN1bGF0ZVJlbSgkc2l6ZSkgIWltcG9ydGFudDtcclxufVxyXG4vKipcclxuICogQ29udmVydCBweCB0byByZW0gZm9yIGxpbmUtaGVpZ2h0IHdpdGggZmFsbGJhY2tcclxuICovXHJcbkBtaXhpbiBsaW5lLWhlaWdodCgkc2l6ZSkge1xyXG4gIGxpbmUtaGVpZ2h0OiAkc2l6ZTtcclxuICBsaW5lLWhlaWdodDogY2FsY3VsYXRlUmVtKCRzaXplKTtcclxufVxyXG5cclxuLyoqXHJcbiAqIE1lZGlhIHF1ZXJ5XHJcbiAqL1xyXG5cclxuLy8gQSBtYXAgb2YgYnJlYWtwb2ludHMuXHJcbi8vICRicmVha3BvaW50czogKFxyXG4vLyAgICAgeHM6IDU3NnB4LFxyXG4vLyAgICAgc206IDc2OHB4LFxyXG4vLyAgICAgbWQ6IDk5MnB4LFxyXG4vLyAgICAgbGc6IDEyMDBweFxyXG4vLyAgICk7XHJcblxyXG4vLyBAaW5jbHVkZSByZXNwb25kLWFib3ZlKHNtKSB7fVxyXG5AbWl4aW4gcmVzcG9uZC1hYm92ZSgkYnJlYWtwb2ludCkge1xyXG4gIC8vIElmIHRoZSBicmVha3BvaW50IGV4aXN0cyBpbiB0aGUgbWFwLlxyXG4gIEBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICRicmVha3BvaW50KSB7XHJcbiAgICAvLyBHZXQgdGhlIGJyZWFrcG9pbnQgdmFsdWUuXHJcbiAgICAkYnJlYWtwb2ludC12YWx1ZTogbWFwLWdldCgkYnJlYWtwb2ludHMsICRicmVha3BvaW50KTtcclxuXHJcbiAgICAvLyBXcml0ZSB0aGUgbWVkaWEgcXVlcnkuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQtdmFsdWUpIHtcclxuICAgICAgQGNvbnRlbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gSWYgdGhlIGJyZWFrcG9pbnQgZG9lc24ndCBleGlzdCBpbiB0aGUgbWFwLlxyXG4gIH0gQGVsc2Uge1xyXG4gICAgLy8gTG9nIGEgd2FybmluZy5cclxuICAgIEB3YXJuICdJbnZhbGlkIGJyZWFrcG9pbnQ6ICN7JGJyZWFrcG9pbnR9Lic7XHJcbiAgfVxyXG59XHJcblxyXG4vL1xyXG4vLyAgUkVTUE9ORCBCRUxPV1xyXG4vL+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk1xyXG5cclxuLy8gQGluY2x1ZGUgcmVzcG9uZC1iZWxvdyhzbSkge31cclxuQG1peGluIHJlc3BvbmQtYmVsb3coJGJyZWFrcG9pbnQpIHtcclxuICAvLyBJZiB0aGUgYnJlYWtwb2ludCBleGlzdHMgaW4gdGhlIG1hcC5cclxuICBAaWYgbWFwLWhhcy1rZXkoJGJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludCkge1xyXG4gICAgLy8gR2V0IHRoZSBicmVha3BvaW50IHZhbHVlLlxyXG4gICAgJGJyZWFrcG9pbnQtdmFsdWU6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludCk7XHJcblxyXG4gICAgLy8gV3JpdGUgdGhlIG1lZGlhIHF1ZXJ5LlxyXG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICgkYnJlYWtwb2ludC12YWx1ZSAtIDEpKSB7XHJcbiAgICAgIEBjb250ZW50O1xyXG4gICAgfVxyXG5cclxuICAgIC8vIElmIHRoZSBicmVha3BvaW50IGRvZXNuJ3QgZXhpc3QgaW4gdGhlIG1hcC5cclxuICB9IEBlbHNlIHtcclxuICAgIC8vIExvZyBhIHdhcm5pbmcuXHJcbiAgICBAd2FybiAnSW52YWxpZCBicmVha3BvaW50OiAjeyRicmVha3BvaW50fS4nO1xyXG4gIH1cclxufVxyXG5cclxuLy9cclxuLy8gIFJFU1BPTkQgQkVUV0VFTlxyXG4vL+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk+KAk1xyXG5cclxuLy8gQGluY2x1ZGUgcmVzcG9uZC1iZXR3ZWVuKHNtLCBtZCkge31cclxuQG1peGluIHJlc3BvbmQtYmV0d2VlbigkbG93ZXIsICR1cHBlcikge1xyXG4gIC8vIElmIGJvdGggdGhlIGxvd2VyIGFuZCB1cHBlciBicmVha3BvaW50cyBleGlzdCBpbiB0aGUgbWFwLlxyXG4gIEBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICRsb3dlcikgYW5kIG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJHVwcGVyKSB7XHJcbiAgICAvLyBHZXQgdGhlIGxvd2VyIGFuZCB1cHBlciBicmVha3BvaW50cy5cclxuICAgICRsb3dlci1icmVha3BvaW50OiBtYXAtZ2V0KCRicmVha3BvaW50cywgJGxvd2VyKTtcclxuICAgICR1cHBlci1icmVha3BvaW50OiBtYXAtZ2V0KCRicmVha3BvaW50cywgJHVwcGVyKTtcclxuXHJcbiAgICAvLyBXcml0ZSB0aGUgbWVkaWEgcXVlcnkuXHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJGxvd2VyLWJyZWFrcG9pbnQpIGFuZCAobWF4LXdpZHRoOiAoJHVwcGVyLWJyZWFrcG9pbnQgLSAxKSkge1xyXG4gICAgICBAY29udGVudDtcclxuICAgIH1cclxuXHJcbiAgICAvLyBJZiBvbmUgb3IgYm90aCBvZiB0aGUgYnJlYWtwb2ludHMgZG9uJ3QgZXhpc3QuXHJcbiAgfSBAZWxzZSB7XHJcbiAgICAvLyBJZiBsb3dlciBicmVha3BvaW50IGlzIGludmFsaWQuXHJcbiAgICBAaWYgKG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJGxvd2VyKSA9PSBmYWxzZSkge1xyXG4gICAgICAvLyBMb2cgYSB3YXJuaW5nLlxyXG4gICAgICBAd2FybiAnWW91ciBsb3dlciBicmVha3BvaW50IHdhcyBpbnZhbGlkOiAjeyRsb3dlcn0uJztcclxuICAgIH1cclxuXHJcbiAgICAvLyBJZiB1cHBlciBicmVha3BvaW50IGlzIGludmFsaWQuXHJcbiAgICBAaWYgKG1hcC1oYXMta2V5KCRicmVha3BvaW50cywgJHVwcGVyKSA9PSBmYWxzZSkge1xyXG4gICAgICAvLyBMb2cgYSB3YXJuaW5nLlxyXG4gICAgICBAd2FybiAnWW91ciB1cHBlciBicmVha3BvaW50IHdhcyBpbnZhbGlkOiAjeyR1cHBlcn0uJztcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBKdXBpdGVyIC0gYWRkIGNvbG9yIG1vZGlmaWVyIGZvciB0ZXh0YmxvY2tcclxuICovXHJcbkBtaXhpbiBhZGQtdGV4dGJsb2NrLWNvbG9yLW1vZGlmaWVyKCRjbGFzc05hbWUsICRjb2xvcikge1xyXG4gIC5jb2xvci0tI3skY2xhc3NOYW1lfS5tay10ZXh0LWJsb2NrICosXHJcbiAgLmNvbG9yLS0jeyRjbGFzc05hbWV9IHtcclxuICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgfVxyXG59XHJcblxyXG4vKipcclxuICogVHlwb2dyYXBoeSAtIGJvZHkgdGV4dCBzdHlsZVxyXG4gKi9cclxuQG1peGluIHN0eWxlLWJvZHktdGV4dCgpIHtcclxuICBAaW5jbHVkZSBmb250U2l6ZSgkZnApO1xyXG4gIEBpbmNsdWRlIHJlc3BvbmQocGhvbmUpIHtcclxuICAgIEBpbmNsdWRlIGZvbnRTaXplKDIxcHgpO1xyXG4gIH1cclxuICBmb250LXdlaWdodDogMzAwO1xyXG4gIGZvbnQtZmFtaWx5OiAkZmFtaWx5LWJvZHk7XHJcbiAgd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcclxufVxyXG5cclxuLyoqXHJcbiAqIE1FRElBIFFVRVJZIE1BTkFHRVJcclxuICovXHJcblxyXG4vKlxyXG4gIDAgLSA2MDBweDogICAgICBQaG9uZVxyXG4gIDYwMCAtIDkwMHB4OiAgICBUYWJsZXQgcG9ydHJhaXRcclxuICA5MDAgLSAxMjAwcHg6ICAgVGFibGV0IGxhbmRzY2FwZVxyXG4gIDEyMDAgLSAxOTIwcHg6ICBpcyB3aGVyZSBvdXIgbm9ybWFsIHN0eWxlIGFwcGx5XHJcbiAgMTkyMCArIDogICAgICAgIEJpZyBkZXNrdG9wXHJcbiBcclxuICAkYnJlYWtwb2ludCBhcmd1ZW1lbnQgY2hvaWNlczpcclxuICAtIHBob25lXHJcbiAgLSB0YWItcG9ydFxyXG4gIC0gdGFiLWxhbmRcclxuICAtIGJpZy1kZXNrdG9wXHJcblxyXG4gIDFlbSA9IDE2cHhcclxuICovXHJcblxyXG4kYnJlYWtwb2ludHM6IChcclxuICBwaG9uZTogMzcuNWVtLFxyXG4gIHRhYi1wb3J0OiA1Ni4yNWVtLFxyXG4gIHRhYi1sYW5kOiA3NWVtLFxyXG4gIHNtYWxsLWRlc2t0b3A6IDkwZW0sXHJcbiAgYmlnLWRlc2t0b3A6IDEyMGVtLFxyXG4gIDRrLWRlc2t0b3A6IDI0MGVtXHJcbik7XHJcblxyXG5AbWl4aW4gcmVzcG9uZCgkYnJlYWtwb2ludCkge1xyXG4gIC8vIElmIHRoZSBicmVha3BvaW50IGV4aXN0cyBpbiB0aGUgbWFwLlxyXG4gIEBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICRicmVha3BvaW50KSB7XHJcbiAgICAvLyBHZXQgdGhlIGJyZWFrcG9pbnQgdmFsdWUuXHJcbiAgICAkYnJlYWtwb2ludC12YWx1ZTogbWFwLWdldCgkYnJlYWtwb2ludHMsICRicmVha3BvaW50KTtcclxuXHJcbiAgICAvLyBXcml0ZSB0aGUgbWVkaWEgcXVlcnkuXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogKCRicmVha3BvaW50LXZhbHVlKSkge1xyXG4gICAgICBAY29udGVudDtcclxuICAgIH1cclxuXHJcbiAgICAvLyBJZiB0aGUgYnJlYWtwb2ludCBkb2Vzbid0IGV4aXN0IGluIHRoZSBtYXAuXHJcbiAgfSBAZWxzZSB7XHJcbiAgICAvLyBMb2cgYSB3YXJuaW5nLlxyXG4gICAgQHdhcm4gJ0ludmFsaWQgYnJlYWtwb2ludDogI3skYnJlYWtwb2ludH0uJztcclxuICB9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBWZW5kb3ItcHJlZml4IGtleWZyYW1lc1xyXG4gKi9cclxuQG1peGluIGtleWZyYW1lcygkYW5pbWF0aW9uTmFtZSkge1xyXG4gIEAtd2Via2l0LWtleWZyYW1lcyAjeyRhbmltYXRpb25OYW1lfSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbiAgQGtleWZyYW1lcyAjeyRhbmltYXRpb25OYW1lfSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuLyoqXHJcbiogVmVuZG9yLXByZWZpeCBhbmltYXRpb25cclxuKi9cclxuQG1peGluIGFuaW1hdGlvbigkYW5pbWF0ZS4uLikge1xyXG4gICRtYXg6IGxlbmd0aCgkYW5pbWF0ZSk7XHJcbiAgJGFuaW1hdGlvbnM6IFwiXCI7XHJcblxyXG4gIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggJG1heCB7XHJcbiAgICAkYW5pbWF0aW9uczogI3skYW5pbWF0aW9ucyArIG50aCgkYW5pbWF0ZSwgJGkpfTtcclxuXHJcbiAgICBAaWYgJGkgPCAkbWF4IHtcclxuICAgICAgJGFuaW1hdGlvbnM6ICN7JGFuaW1hdGlvbnMgKyBcIiwgXCJ9O1xyXG4gICAgfVxyXG4gIH1cclxuICAtd2Via2l0LWFuaW1hdGlvbjogJGFuaW1hdGlvbnM7XHJcbiAgLW1vei1hbmltYXRpb246ICRhbmltYXRpb25zO1xyXG4gIC1vLWFuaW1hdGlvbjogJGFuaW1hdGlvbnM7XHJcbiAgYW5pbWF0aW9uOiAkYW5pbWF0aW9ucztcclxufVxyXG5cclxuLyoqXHJcbiogVmVuZG9yLXByZWZpeCB0cmFuc2Zvcm1cclxuKi9cclxuQG1peGluIHRyYW5zZm9ybSgkdHJhbnNmb3Jtcykge1xyXG4gIC1tcy10cmFuc2Zvcm06ICR0cmFuc2Zvcm1zO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiAkdHJhbnNmb3JtcztcclxuICB0cmFuc2Zvcm06ICR0cmFuc2Zvcm1zO1xyXG59XHJcbiIsIkBpbXBvcnQgXCIuL2ZvbnQuc2Nzc1wiO1xyXG5cclxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXHJcbiAgICBmb250LWZhbWlseTogJ1N3aXNzNzIxQlQnO1xyXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXHJcbiRmYW1pbHktdGl0bGU6IFwiRnV0dXJhUFRCb2xkXCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIHNhbnMtc2VyaWYsXHJcbiAgXCJBcHBsZSBDb2xvciBFbW9qaVwiLCBcIlNlZ29lIFVJIEVtb2ppXCIsIFwiU2Vnb2UgVUkgU3ltYm9sXCI7XHJcbiRmYW1pbHktYm9keTogXCJGdXR1cmFQVExpZ2h0XCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgQXJpYWwsIHNhbnMtc2VyaWYsXHJcbiAgXCJBcHBsZSBDb2xvciBFbW9qaVwiLCBcIlNlZ29lIFVJIEVtb2ppXCIsIFwiU2Vnb2UgVUkgU3ltYm9sXCI7XHJcbiRmYW1pbHktc3VidGl0bGU6IFwiRnV0dXJhUFRIZWF2eVwiLCBzYW5zLXNlcmlmO1xyXG5cclxuYm9keSB7XHJcbiAgLnNsaWRlLWlubmVyLWNvbnRlbnQtd3JhcHBlciBoMiB7XHJcbiAgICBAaW5jbHVkZSBmb250U2l6ZSg2MHB4KTtcclxuICB9XHJcbiAgaDEsXHJcbiAgaDIge1xyXG4gICAgQGluY2x1ZGUgZm9udFNpemUoJGYxKTtcclxuICAgIG1hcmdpbi1ib3R0b206IDFyZW0gIWltcG9ydGFudDtcclxuICB9XHJcbiAgaDMge1xyXG4gICAgQGluY2x1ZGUgZm9udFNpemUoJGY0KTtcclxuICB9XHJcbiAgaDQge1xyXG4gICAgQGluY2x1ZGUgZm9udFNpemUoJGY0KTtcclxuICB9XHJcbiAgLmRlYWxzLWlubmVyLWNvbnRlbnQtd3JhcHBlciBoMiB7XHJcbiAgICBAaW5jbHVkZSBmb250U2l6ZSgkZnApO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMCAhaW1wb3J0YW50O1xyXG4gIH1cclxuICBkaXYud3BiX3RleHRfY29sdW1uIGg0IHtcclxuICAgIEBpbmNsdWRlIGZvbnRTaXplKCRmMyk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBib2R5IHtcclxuLy8gICBoMSxcclxuLy8gICBoMixcclxuLy8gICBoMyxcclxuLy8gICBoNCxcclxuLy8gICBoNSxcclxuLy8gICBoNiB7XHJcbi8vICAgfVxyXG4vLyAgIGlucHV0LFxyXG4vLyAgIHNlbGVjdCxcclxuLy8gICB0ZXh0YXJlYSB7XHJcbi8vICAgICBmb250LWZhbWlseTogJGZhbWlseS1ib2R5O1xyXG4vLyAgIH1cclxuLy8gICAmLnBhZ2UsXHJcbi8vICAgJi5zaW5nbGUtc2VydmljZXMsXHJcbi8vICAgJi5zaW5nbGUtcG9ydGZvbGlvIHtcclxuLy8gICAgIGgxIHtcclxuLy8gICAgICAgQGluY2x1ZGUgZm9udFNpemUoJGYxKTtcclxuLy8gICAgICAgZm9udC1mYW1pbHk6ICRmYW1pbHktdGl0bGU7XHJcbi8vICAgICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xyXG4vLyAgICAgfVxyXG4vLyAgICAgaDIge1xyXG4vLyAgICAgICBAaW5jbHVkZSBmb250U2l6ZSgkZjIpO1xyXG4vLyAgICAgICBmb250LWZhbWlseTogJGZhbWlseS10aXRsZTtcclxuLy8gICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuLy8gICAgICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XHJcbi8vICAgICB9XHJcbi8vICAgICBoMyB7XHJcbi8vICAgICAgIEBpbmNsdWRlIGZvbnRTaXplKCRmMyk7XHJcbi8vICAgICAgIGZvbnQtZmFtaWx5OiAkZmFtaWx5LXRpdGxlO1xyXG4vLyAgICAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcclxuLy8gICAgICAgQGluY2x1ZGUgcmVzcG9uZChzbWFsbC1kZXNrdG9wKSB7XHJcbi8vICAgICAgICAgQGluY2x1ZGUgZm9udFNpemUoNTBweCk7XHJcbi8vICAgICAgIH1cclxuLy8gICAgIH1cclxuLy8gICAgIGg0IHtcclxuLy8gICAgICAgQGluY2x1ZGUgZm9udFNpemUoJGY0KTtcclxuLy8gICAgICAgZm9udC1mYW1pbHk6ICRmYW1pbHktdGl0bGU7XHJcbi8vICAgICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xyXG4vLyAgICAgfVxyXG4vLyAgICAgaDUge1xyXG4vLyAgICAgICBAaW5jbHVkZSBmb250U2l6ZSgkZjUpO1xyXG4vLyAgICAgICBmb250LWZhbWlseTogJGZhbWlseS1zdWJ0aXRsZTtcclxuLy8gICAgICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XHJcbi8vICAgICB9XHJcbi8vICAgICBoNiB7XHJcbi8vICAgICAgIEBpbmNsdWRlIGZvbnRTaXplKCRmNik7XHJcbi8vICAgICAgIHdvcmQtc3BhY2luZzogOHB4O1xyXG4vLyAgICAgICBmb250LWZhbWlseTogJGZhbWlseS1zdWJ0aXRsZTtcclxuLy8gICAgICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XHJcbi8vICAgICB9XHJcbi8vICAgICBwIHtcclxuLy8gICAgICAgQGluY2x1ZGUgc3R5bGUtYm9keS10ZXh0KCk7XHJcbi8vICAgICB9XHJcbi8vICAgfVxyXG4vLyAgICNtay1mb290ZXIge1xyXG4vLyAgICAgcCB7XHJcbi8vICAgICAgIEBpbmNsdWRlIHN0eWxlLWJvZHktdGV4dCgpO1xyXG4vLyAgICAgICBAaW5jbHVkZSBmb250U2l6ZSgxNHB4KTtcclxuLy8gICAgICAgbGV0dGVyLXNwYWNpbmc6IDJweDtcclxuLy8gICAgICAgd29yZC1zcGFjaW5nOiA4cHg7XHJcbi8vICAgICAgIGZvbnQtZmFtaWx5OiAkZmFtaWx5LXN1YnRpdGxlO1xyXG4vLyAgICAgfVxyXG4vLyAgIH1cclxuLy8gICAuaGVhZGluZyB7XHJcbi8vICAgICBoMiB7XHJcbi8vICAgICAgIEBpbmNsdWRlIGZvbnRTaXplKDgwcHgpO1xyXG4vLyAgICAgICBsZXR0ZXItc3BhY2luZzogMnB4O1xyXG4vLyAgICAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcclxuLy8gICAgIH1cclxuLy8gICB9XHJcbi8vICAgI21rLXBhZ2UtaW50cm9kdWNlIHtcclxuLy8gICAgIGgxIHtcclxuLy8gICAgICAgQGluY2x1ZGUgZm9udFNpemUoNTBweCk7XHJcbi8vICAgICAgIGZvbnQtZmFtaWx5OiAkZmFtaWx5LXRpdGxlO1xyXG4vLyAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4vLyAgICAgICAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDtcclxuLy8gICAgICAgY29sb3I6IGJsYWNrO1xyXG4vLyAgICAgfVxyXG4vLyAgIH1cclxuLy8gICAubWFpbi1uYXZpZ2F0aW9uLXVsIHtcclxuLy8gICAgIC5tZW51LWl0ZW0ge1xyXG4vLyAgICAgICBhIHtcclxuLy8gICAgICAgICBmb250LWZhbWlseTogJGZhbWlseS1ib2R5O1xyXG4vLyAgICAgICB9XHJcbi8vICAgICB9XHJcbi8vICAgfVxyXG4vLyB9XHJcbiIsIiIsIkBpbmNsdWRlIGtleWZyYW1lcyggZmxvYXR5IClcclxue1xyXG4gICAgMCUge1xyXG4gICAgICAgIHRvcDogMHB4O1xyXG4gICAgfVxyXG4gICAgNTAlIHtcclxuICAgICAgICB0b3A6IDE1cHg7XHJcbiAgICB9XHJcbiAgICAxMDAlIHtcclxuICAgICAgICB0b3A6IDBweDtcclxuICAgIH1cclxufVxyXG5cclxuQGluY2x1ZGUga2V5ZnJhbWVzKCBmbG9hdHggKVxyXG57XHJcbiAgICAwJSB7XHJcbiAgICAgICAgbGVmdDogMHB4O1xyXG4gICAgfVxyXG4gICAgNTAlIHtcclxuICAgICAgICBsZWZ0OiAxNXB4O1xyXG4gICAgfVxyXG4gICAgMTAwJSB7XHJcbiAgICAgICAgbGVmdDogMHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG5AaW5jbHVkZSBrZXlmcmFtZXMoIHRvc3NpbmcgKVxyXG57XHJcbiAgICAwJSB7XHJcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNmb3JtKHJvdGF0ZSgtNmRlZykpO1xyXG4gICAgfVxyXG4gICAgNTAlIHtcclxuICAgICAgICBAaW5jbHVkZSB0cmFuc2Zvcm0ocm90YXRlKDZkZWcpKTtcclxuICAgIH1cclxuICAgIDEwMCUge1xyXG4gICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybShyb3RhdGUoLTZkZWcpKTtcclxuICAgIH1cclxufVxyXG5cclxuQGluY2x1ZGUga2V5ZnJhbWVzKCByb3RhdGlvbiApXHJcbntcclxuICAgIGZyb20ge1xyXG4gICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybShyb3RhdGUoMGRlZykpO1xyXG4gICAgfVxyXG4gICAgdG8ge1xyXG4gICAgICAgIEBpbmNsdWRlIHRyYW5zZm9ybShyb3RhdGUoMzU5ZGVnKSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5pcy1mbG9hdGluZy12ZXJ0aWNhbCB7XHJcbiAgICBAaW5jbHVkZSBhbmltYXRpb24oJ2Zsb2F0eSAycyBpbmZpbml0ZSBsaW5lYXInKTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuXHJcbi5pcy1mbG9hdGluZy1ob3Jpem9udGFsIHtcclxuICAgIEBpbmNsdWRlIGFuaW1hdGlvbignZmxvYXR4IDJzIGluZmluaXRlIGxpbmVhcicpO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uaXMtcm90YXRpb24ge1xyXG4gICAgQGluY2x1ZGUgYW5pbWF0aW9uKCdyb3RhdGlvbiA2cyBpbmZpbml0ZSBsaW5lYXInKTtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLmlzLXRvc3Npbmcge1xyXG4gICAgQGluY2x1ZGUgYW5pbWF0aW9uKCd0b3NzaW5nIDZzIGluZmluaXRlIGxpbmVhcicpO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59IiwiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQ0FBOzs7OztJQUtJO0FDTEo7O0dBRUc7QUFLSDs7R0FFRztBQU1IOztHQUVHO0FBcUZIOztHQUVHO0FBUUg7O0dBRUc7QUFXSDs7R0FFRztBQUVIOzs7Ozs7Ozs7Ozs7OztHQWNHO0FBNkJIOztHQUVHO0FBU0g7O0VBRUU7QUFrQkY7O0VBRUU7QUMzTUY7OzJDQUUyQztBQU8zQyxBQUNFLElBREUsQ0FDRiw0QkFBNEIsQ0FBQyxFQUFFLENBQUM7RURSaEMsU0FBUyxFQ1NXLElBQUk7RURSeEIsU0FBUyxFREdELE9BQWlCLENDSE0sVUFBVSxHQ1N4Qzs7QUFISCxBQUlFLElBSkUsQ0FJRixFQUFFO0FBSkosSUFBSSxDQUtGLEVBQUUsQ0FBQztFRFpILFNBQVMsRUZVTixJQUFJO0VFVFAsU0FBUyxFREdELE1BQWlCLENDSE0sVUFBVTtFQ2F2QyxhQUFhLEVBQUUsZUFBZSxHQUMvQjs7QUFSSCxBQVNFLElBVEUsQ0FTRixFQUFFLENBQUM7RURoQkgsU0FBUyxFRmFOLElBQUk7RUVaUCxTQUFTLEVER0QsU0FBaUIsQ0NITSxVQUFVLEdDaUJ4Qzs7QUFYSCxBQVlFLElBWkUsQ0FZRixFQUFFLENBQUM7RURuQkgsU0FBUyxFRmFOLElBQUk7RUVaUCxTQUFTLEVER0QsU0FBaUIsQ0NITSxVQUFVLEdDb0J4Qzs7QUFkSCxBQWVFLElBZkUsQ0FlRiw0QkFBNEIsQ0FBQyxFQUFFLENBQUM7RUR0QmhDLFNBQVMsRUZnQk4sSUFBSTtFRWZQLFNBQVMsRURHRCxRQUFp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 */
